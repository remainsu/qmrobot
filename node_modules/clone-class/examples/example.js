"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// tslint:disable:variable-name
const assert = require("assert");
const src_1 = require("../src/");
class Employee {
    constructor(name) {
        this.name = name;
    }
    info() {
        console.log(`Employee ${this.name}, Company ${this.constructor.company}`);
    }
}
console.log(`
# Example 1: cloneClass()
`);
const GoogleEmployee = src_1.cloneClass(Employee);
GoogleEmployee.company = 'Google';
const MicrosoftEmployee = src_1.cloneClass(Employee);
MicrosoftEmployee.company = 'Microsoft';
const employeeGg = new GoogleEmployee('Tom');
const employeeMs = new MicrosoftEmployee('Jerry');
employeeGg.info();
// Output: Employee Tom, Company Google
employeeMs.info();
// Output: Employee Jerry, Company Microsoft
console.log(`
# Example 2: instanceToClass()
`);
const RestoreGoogleEmployee = src_1.instanceToClass(employeeGg, Employee);
assert(RestoreGoogleEmployee === GoogleEmployee, 'Should get back the Class which instanciated the instance');
assert(RestoreGoogleEmployee !== Employee, 'Should be different with the parent Class');
const anotherEmployee = new RestoreGoogleEmployee('Mary');
anotherEmployee.info();
// Output: Employee Mary, Company Google
console.log();
//# sourceMappingURL=example.js.map