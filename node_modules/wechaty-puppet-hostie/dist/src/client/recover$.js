"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const rxjs_1 = require("rxjs");
const operators_1 = require("rxjs/operators");
const config_1 = require("../config");
/**
 * Filters
 */
exports.switchSuccess = (status) => status === true;
/**
 * Actions
 */
exports.resetPuppet = (puppet) => () => puppet.emit('reset', { data: 'recover$() AED' });
exports.dingHeartbeat = (puppet) => () => puppet.ding(`recover$() CPR`);
/**
 * Observables
 */
exports.switchOn$ = (puppet) => rxjs_1.fromEvent(puppet.state, 'on');
exports.switchOff$ = (puppet) => rxjs_1.fromEvent(puppet.state, 'off');
exports.heartbeat$ = (puppet) => rxjs_1.fromEvent(puppet, 'heartbeat');
/**
 * Streams
 */
// Heartbeat stream is like ECG (ElectroCardioGraphy)
exports.switchOnHeartbeat$ = (puppet) => exports.switchOn$(puppet).pipe(operators_1.filter(exports.switchSuccess), operators_1.tap(_ => config_1.log.verbose('Puppet', 'recover$() switchOn$ fired')), operators_1.switchMap(_ => exports.heartbeat$(puppet).pipe(operators_1.startWith(undefined), // initial beat
operators_1.tap(payload => config_1.log.verbose('Puppet', 'recover$() heartbeat: %s', JSON.stringify(payload))))));
// Ding is like CPR (Cardio Pulmonary Resuscitation)
exports.heartbeatDing$ = (puppet) => exports.switchOnHeartbeat$(puppet).pipe(operators_1.debounce(() => rxjs_1.interval(15 * 1000)), operators_1.tap(_ => config_1.log.verbose('Puppet', 'recover$() heartbeatDing()')), operators_1.tap(exports.dingHeartbeat(puppet)));
// Reset is like AED (Automated External Defibrillator)
exports.heartbeatReset$ = (puppet) => exports.switchOnHeartbeat$(puppet).pipe(operators_1.debounce(_ => rxjs_1.interval(60 * 1000)), operators_1.tap(_ => config_1.log.verbose('Puppet', 'recover$() heartbeatReset()')), operators_1.switchMap(_ => rxjs_1.interval(60 * 1000).pipe(operators_1.map(n => `AED#${n}`), operators_1.tap(exports.resetPuppet(puppet)), operators_1.takeUntil(exports.heartbeat$(puppet)))));
/**
 * Main stream
 */
exports.recover$ = (puppet) => rxjs_1.merge(exports.heartbeatDing$(puppet), exports.heartbeatReset$(puppet));
//# sourceMappingURL=recover$.js.map