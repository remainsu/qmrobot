"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const wechaty_puppet_1 = require("wechaty-puppet");
exports.convertFromGrpcContact = (contactPayload, isSync) => {
    const payload = {
        alias: contactPayload.Alias,
        bigHeadUrl: contactPayload.BigHeadImgUrl,
        city: contactPayload.City,
        contactFlag: contactPayload.ContactFlag,
        contactType: Number(contactPayload.ContactType),
        country: '',
        nickName: contactPayload.NickName,
        province: contactPayload.Province,
        remark: contactPayload.RemarkName,
        sex: contactPayload.Sex,
        signature: contactPayload.Signature,
        smallHeadUrl: contactPayload.SmallHeadImgUrl,
        stranger: contactPayload.EncryptUsername,
        tagList: contactPayload.LabelLists,
        ticket: '',
        userName: contactPayload.UserName,
        verifyFlag: contactPayload.VerifyFlag,
    };
    return payload;
};
exports.convertTagStr = (str) => {
    const tag = JSON.parse(str);
    const _tag = {
        count: tag.count,
        loginer: tag.loginer,
        message: tag.message,
        queueName: tag.queueName,
        status: tag.status,
        tagList: tag.labelList,
        uin: tag.uin,
    };
    return _tag;
};
exports.convertFromGrpcContactSelf = (contactPayload) => {
    const payload = {
        alias: contactPayload.alias,
        bigHeadUrl: contactPayload.bigHeadImg,
        city: contactPayload.city,
        contactFlag: 3,
        contactType: 0,
        country: contactPayload.country,
        nickName: contactPayload.nickName,
        province: contactPayload.province,
        remark: '',
        sex: contactPayload.sex,
        signature: contactPayload.signature,
        smallHeadUrl: contactPayload.smallHeadImg,
        stranger: '',
        tagList: '',
        ticket: '',
        userName: contactPayload.userName,
        verifyFlag: 0,
    };
    return payload;
};
exports.convertSearchContactToContact = (searchContact, isNumber) => {
    const contact = {
        alias: isNumber ? '' : searchContact.searchId,
        bigHeadUrl: searchContact.avatar,
        city: '',
        contactFlag: wechaty_puppet_1.ContactType.Unknown,
        contactType: 0,
        country: '',
        nickName: searchContact.nickName,
        province: '',
        remark: '',
        sex: wechaty_puppet_1.ContactGender.Unknown,
        signature: '',
        smallHeadUrl: searchContact.avatar,
        stranger: searchContact.v1,
        tagList: '',
        ticket: searchContact.v2,
        userName: searchContact.searchId,
        verifyFlag: 0,
    };
    return contact;
};
//# sourceMappingURL=contact-convertor.js.map