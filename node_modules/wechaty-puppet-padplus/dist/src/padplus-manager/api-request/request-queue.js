"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
class RequestQueue {
    static exec(func) {
        return __awaiter(this, void 0, void 0, function* () {
            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
                this.funcQueue.push({ func, reject, resolve });
                if (!this.running) {
                    this.running = true;
                    yield this.execNext();
                }
            }));
        });
    }
    static execNext() {
        return __awaiter(this, void 0, void 0, function* () {
            const funcObj = this.funcQueue.shift();
            if (!funcObj) {
                throw new Error(`Can not get funcObj from funcQueue.`);
            }
            try {
                const result = yield funcObj.func();
                funcObj.resolve(result);
            }
            catch (e) {
                funcObj.reject(e);
            }
            if (this.funcQueue.length > 0) {
                yield this.execNext();
            }
            else {
                this.running = false;
            }
        });
    }
}
exports.RequestQueue = RequestQueue;
RequestQueue.funcQueue = [];
RequestQueue.running = false;
//# sourceMappingURL=request-queue.js.map