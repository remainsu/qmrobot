"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const wechaty_puppet_1 = require("wechaty-puppet");
const schemas_1 = require("../schemas");
function messageType(rawType) {
    let type;
    switch (rawType) {
        case schemas_1.PadplusMessageType.Text:
            type = wechaty_puppet_1.MessageType.Text;
            break;
        case schemas_1.PadplusMessageType.Image:
            type = wechaty_puppet_1.MessageType.Image;
            // console.log(rawPayload)
            break;
        case schemas_1.PadplusMessageType.Voice:
            type = wechaty_puppet_1.MessageType.Audio;
            // console.log(rawPayload)
            break;
        case schemas_1.PadplusMessageType.Emoticon:
            type = wechaty_puppet_1.MessageType.Emoticon;
            // console.log(rawPayload)
            break;
        case schemas_1.PadplusMessageType.App:
            type = wechaty_puppet_1.MessageType.Attachment;
            // console.log(rawPayload)
            break;
        case schemas_1.PadplusMessageType.Location:
            type = wechaty_puppet_1.MessageType.Location;
            // console.log(rawPayload)
            break;
        case schemas_1.PadplusMessageType.Video:
            type = wechaty_puppet_1.MessageType.Video;
            // console.log(rawPayload)
            break;
        case schemas_1.PadplusMessageType.Sys:
            type = wechaty_puppet_1.MessageType.Unknown;
            break;
        case schemas_1.PadplusMessageType.ShareCard:
            type = wechaty_puppet_1.MessageType.Contact;
            break;
        case schemas_1.PadplusMessageType.VoipMsg:
        case schemas_1.PadplusMessageType.Recalled:
            type = wechaty_puppet_1.MessageType.Recalled;
            break;
        case schemas_1.PadplusMessageType.StatusNotify:
        case schemas_1.PadplusMessageType.SysNotice:
            type = wechaty_puppet_1.MessageType.Unknown;
            break;
        default:
            throw new Error('unsupported type: ' + schemas_1.PadplusMessageType[rawType] + '(' + rawType + ')');
    }
    return type;
}
exports.messageType = messageType;
//# sourceMappingURL=message-type.js.map