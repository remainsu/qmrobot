#!/usr/bin/env ts-node
"use strict";
// tslint:disable:max-line-length
// tslint:disable:no-shadowed-variable
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const blue_tape_1 = __importDefault(require("blue-tape"));
const room_event_join_message_parser_1 = require("./room-event-join-message-parser");
blue_tape_1.default('roomJoinEventMessageParser() not detected', (t) => __awaiter(void 0, void 0, void 0, function* () {
    t.equal(yield room_event_join_message_parser_1.roomJoinEventMessageParser(undefined), null, 'should return null for undefined');
    t.equal(yield room_event_join_message_parser_1.roomJoinEventMessageParser('null'), null, 'should return null for null');
    t.equal(yield room_event_join_message_parser_1.roomJoinEventMessageParser('test'), null, 'should return null for string');
    t.equal(yield room_event_join_message_parser_1.roomJoinEventMessageParser({}), null, 'should return null for empty object');
    t.equal(yield room_event_join_message_parser_1.roomJoinEventMessageParser({ content: 'fsdfsfsdfasfas' }), null, 'should return null for PadplusMessagePayload with unknown content');
}));
blue_tape_1.default('roomJoinEventMessageParser() Recall Message', (t) => __awaiter(void 0, void 0, void 0, function* () {
    const MESSAGE_PAYLOAD = {
        content: 'qq512436430: \n<sysmsg type = "revokemsg"><revokemsg><session>5367653125@chatroom</session><msgid>1452102025</msgid><newmsgid>2582549652250718552</newmsgid><replacemsg><![CDATA["李佳芮" has recalled a message.]]></replacemsg></revokemsg></sysmsg>',
        createTime: 1528806181,
        fromUserName: '5367653125@chatroom',
        imgStatus: 0,
        l1MsgType: 0,
        msgId: '8079407148816751084',
        msgSource: '',
        msgSourceCd: 0,
        msgType: 10002,
        newMsgId: 8079407148816751084,
        pushContent: '',
        status: 1,
        toUserName: 'wxid_5zj4i5htp9ih22',
        uin: '0',
        wechatUserName: '',
    };
    t.equal(yield room_event_join_message_parser_1.roomJoinEventMessageParser(MESSAGE_PAYLOAD), null, 'should return null for a normal message recall payload');
}));
blue_tape_1.default('roomJoinEventMessageParser() Recall Message', (t) => __awaiter(void 0, void 0, void 0, function* () {
    const MESSAGE_PAYLOAD = {
        appMsgType: undefined,
        content: '"苏畅👾"邀请"奥斯陆"加入了群聊',
        createTime: 1568205596095,
        fileName: undefined,
        fromMemberNickName: undefined,
        fromMemberUserName: undefined,
        fromUserName: '18972581662@chatroom',
        imgBuf: '',
        imgStatus: 1,
        l1MsgType: 5,
        msgId: '2330628644341231870',
        msgSource: '',
        msgSourceCd: 2,
        msgType: 10000,
        newMsgId: 2330628644341231600,
        pushContent: '',
        status: 4,
        toUserName: 'wxid_v7j3e9kna9l912',
        uin: '2978186714',
        url: undefined,
        wechatUserName: 'wxid_v7j3e9kna9l912',
    };
    const actual = {
        inviteeNameList: ['奥斯陆'],
        inviterName: '苏畅👾',
        roomId: '18972581662@chatroom',
        timestamp: 1568205596095,
    };
    t.deepEqual(yield room_event_join_message_parser_1.roomJoinEventMessageParser(MESSAGE_PAYLOAD), actual, 'should return actual data');
}));
//# sourceMappingURL=room-event-join-message-parser.spec.js.map