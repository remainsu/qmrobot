"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const accessory_1 = require("../accessory");
const config_1 = require("../config");
class Favorite extends accessory_1.Accessory {
    static list() {
        return [];
    }
    /**
     * Get tags for all favorites
     *
     * @static
     * @returns {Promise<Tag[]>}
     * @example
     * const tags = await wechaty.Favorite.tags()
     */
    static tags() {
        return __awaiter(this, void 0, void 0, function* () {
            config_1.log.verbose('Favorite', 'static tags() for %s', this);
            // TODO:
            // try {
            //   const tagIdList = await this.puppet.tagFavoriteList()
            //   const tagList = tagIdList.map(id => this.wechaty.Tag.load(id))
            //   return tagList
            // } catch (e) {
            //   log.error('Favorite', 'static tags() exception: %s', e.message)
            //   return []
            // }
            return [];
        });
    }
    /*
     * @hideconstructor
     */
    constructor() {
        super();
        //
    }
    tags() {
        return __awaiter(this, void 0, void 0, function* () {
            // TODO: implmente this method
            return [];
        });
    }
    findAll() {
        return __awaiter(this, void 0, void 0, function* () {
            //
        });
    }
}
exports.Favorite = Favorite;
//# sourceMappingURL=favorite.js.map