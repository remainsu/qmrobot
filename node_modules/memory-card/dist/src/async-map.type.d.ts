/**
 * ES6 Map like Async API
 */
export interface AsyncMap<K = any, V = any> {
    size: Promise<number>;
    [Symbol.asyncIterator](): AsyncIterableIterator<[K, V]>;
    entries(): AsyncIterableIterator<[K, V]>;
    keys(): AsyncIterableIterator<K>;
    values(): AsyncIterableIterator<V>;
    get(key: K): Promise<V | undefined>;
    set(key: K, value: V): Promise<void>;
    has(key: K): Promise<boolean>;
    delete(key: K): Promise<void>;
    clear(): Promise<void>;
}
/**
 * ES6 Map Defination:
 */
//# sourceMappingURL=async-map.type.d.ts.map