import { concat, EMPTY, of, Subject, } from 'rxjs';
import { concatMap, delay, } from 'rxjs/operators';
import RxQueue from './rx-queue';
/**
 * DelayQueue passes all the items and add delays between items.
 * T: item type
 */
export class DelayQueue extends RxQueue {
    /**
     *
     * @param period milliseconds
     */
    constructor(period) {
        super(period);
        this.subject = new Subject();
        this.subscription = this.subject.pipe(concatMap(args => concat(of(args), // emit first item right away
        EMPTY.pipe(delay(this.period))))).subscribe((item) => super.next(item));
    }
    next(item) {
        this.subject.next(item);
    }
    unsubscribe() {
        this.subscription.unsubscribe();
        super.unsubscribe();
    }
}
export default DelayQueue;
//# sourceMappingURL=delay-queue.js.map