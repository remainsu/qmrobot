"use strict";
// tslint:disable:variable-name
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const test = require("blue-tape");
const instance_to_class_1 = require("./instance-to-class");
const fixture_class_1 = require("../tests/fixtures/fixture-class");
test('instanceToClass smoke testing', (t) => __awaiter(this, void 0, void 0, function* () {
    const instance = new fixture_class_1.default(1, 2);
    const SameFixtureClass = instance_to_class_1.default(instance, fixture_class_1.default);
    t.equal(SameFixtureClass, fixture_class_1.default, 'should get back the same Class for its own instance');
    class ChildFixtureClass extends fixture_class_1.default {
    }
    const anotherInstance = new ChildFixtureClass(3, 4);
    const AnotherFixtureClass = instance_to_class_1.default(anotherInstance, fixture_class_1.default);
    t.notEqual(AnotherFixtureClass, fixture_class_1.default, 'should get back another Class for instance from its child class');
}));
//# sourceMappingURL=instance-to-class.spec.js.map